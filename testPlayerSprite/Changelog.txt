「 Changelog 」

・SaveData機能の移植を行いました。
・CSV読込機能を実装しました。
・外部フォントを使う様にしました。
・クラスのフォルダ分けを行いました。
・BattleSceneの実装を行っています。(区切りの良い段階でupしてます）
・CSVから読み込んだデータ(CSV_CharacterStatus.csv)をSaveDataに保存するよ
うにしました。

「 伝達事項 」

・CSV読込とSaveData保存について
	GameManager.csクラスでCSVLoader.csを用いて、ResourcesフォルダにあるC
	SV_CharacterStatus.csvを読み込んできて、SaveData.csクラスのSaveData.
	setStringを使い、PlayerManager.csにあるKEYとCSVから読み込んできた
	データを保存しています。
	※現状、とてもコードが冗長になっています。
	※ConsoleにCSVの内容が出力される様になっています。
	※配列に格納したデータが何番目かも出力されます。

・SaveDataに保存されたCSVの読込について
	HUD_BattleScene.csクラスで、SaveData.csクラスのSaveData.getIntやSave
	Data.getStringを用いて、PlayerManager.csにあるKEYで変数に入れて読込
	を行っています。
	※こちらも、とても冗長でGameObjectとの関連づけも相まってかなり面倒で
	冗長になっています。

・BattleSceneの進捗具合について
	現状、BattleSceneの完成度は、まだまだですが、キャラクターのHP、MP、
	キャラクター名などのステータス情報はCSVの内容と同期しています。
	これから更に、BattleScene用に、UI(コマンド部分）クラスを作っていき作
	業を進めていく予定でいます。

・日本語用フォントして、IPAexフォント（IPAexゴシック）をuGUIで使用してい
	ます。また、CSV読込機能も外部から持ってきています。
	※ライセンス情報などフォルダに格納しています。

記述日 : 2017年08月27日(日) 午後6時25分
記述者 : 牛山 拓成


------------------------------------------------------------------------

「 Changelog 」

・CSV読込機能の効率化をしました。
・画面上にGUIに出力されるセーブデーターキーをCキーで消すようにしました。
・コードの見やすさ(コメント文)の調整を行いました。
・CSV_EnemyStatus.csv(敵情報)をリソースフォルダに追加しました。

「 伝達事項 」

・セーブデータキーの自動生成法則について
	各、CSVファイルのID属性を起点にキーが変更されていきます。例えば、CSV
	_EnemyStatus.csv(敵情報)で例えると、ID属性のMonster01にCSVのヘッダー
	が付加され、Monster01_ID, Monster01_HP...となっていき、再びID属性が
	来ると、Monster02にキーが変更され、Monster02_ID, Monster02_HP...とい
	う処理を繰り返していきキーが自動生成されます。従って、リソースフォル
	ダにあるCSVファイルからキー名が容易に推測することが出来ます。

	また、キー情報は、GUIを使って画面上に出力されます。出力が邪魔なとき
	はCキーを押すことによって出力内容を消すことが出来ます。
	また、キー情報は、Console上にDebug出力されるようにもしてあります。

	キー情報変更処理の所 : CSVLoader.cs 157行目

・セーブデータキーを用いた値の取得の仕方について
	SaveData.getStringメソッドを使ってキー情報を引数として入れると値の取
	得が可能になっています。その処理を実際にやっているところを以下に示し
	ます。
	HUD_BattleScene.cs 121行目です。参考にして下さい。

記述日 : 2017年08月30日(水) 午後6時02分
記述者 : 牛山 拓成


------------------------------------------------------------------------

「 Changelog 」

・SaveData機能を一切使用しないで、PlayerデータCSVから直接データを持って
くるように変更しました。
・DungeonSceneレベルにコマンドUIの一部だけ実装しました。動作処理は、書い
ていません。
・CSV_CharacterStatus.csvのデータのキー及びデータをConsoleと画面に出力す
るように変更しました。

「 伝達事項 」

・CSV_CharacterStatus.csvのデータ取得方法について
	リソースフォルダにあるCSV_CharacterStatus.csvのデータをPlayerManager.
	csクラスにあるGetPlayerStatusDataメソッドを使いデータの取得を行えま	
	す。メソッドには、キー情報が必要です。キー情報生成は、過去LOG : セー
	ブデータキーの自動生成法則について、と同じ方法を用いています。

・CSVデータの配列へのSET, GETの方法について
	実際に処理を行っている処理から解説していきます。PlayerManager.csクラ
	ス 19 〜 35行目でCSVデータを格納する配列の準備ならびに、CSVLoader.cs
	クラスにあるloader.GetCSV_Key_Recordメソッドを使い準備した配列にCSV
	の内容を入れています。
	保存した内容の読込処理は、PlayerManager.csクラス 117 〜 135行目で行
	っています。格納された配列キーデータと照合し同じ時の配列データを返す
	関数です。

以上のようなコードを他のクラスでコピー＆ペーストし、変数などを少し改変す
れば、他のCSVファイルを持ってくることが出来るかと思います。

記述日 : 2017年09月01日(金) 午前1時25分
記述者 : 牛山 拓成


------------------------------------------------------------------------

「 Changelog 」

・EnemyManagerおよびPlayerManagerクラスを基底クラスとする様に変更しまし
た。
・ExampleTestおよびExampleTest1を作成し基底クラスにアクセスの仕方を記述
しました。
・基底クラスの変更により、DungeonSceneとHUD_BattleSceneクラスが使えませ
ん。修正していきます。

「 伝達事項 」

・基底クラスの確認方法について
	プロジェクトを開いたら、BattleSceneマップを開き実行してもらえれば、
	ログがでますのでそこで確認できます。

記述日 : 2017年09月07日(木) 午後11時01分
記述者 : 牛山 拓成


------------------------------------------------------------------------